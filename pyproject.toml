[tool.poetry]
name = "acr-monitoring"
version = "0.0.0"
description = "listens to acr cloudevents and leverages the zabbix sender proto to send that timestamp of the last recognized track to zabbix so we can notice if there are gaps"
authors = ["RaBe IT-Reaktion <it@rabe.ch>"]
license = "AGPLv3"
readme = "README.md"
packages = [{include = "acrmonitor.py"}]

[tool.poetry.scripts]
acrmonitor = 'acrmonitor:main'

[tool.poetry.dependencies]
python = "^3.11"
cloudevents = "^1.10.1"
ConfigArgParse = "^1.7"
kafka-python = "^2.0.2"
py-zabbix = "^1.1.7"
minio = "^7.2.5"

[tool.poetry.group.dev.dependencies]
black = "^24.4.0"
pytest = "^8.1.1"
pytest-ruff = "^0.3"
pytest-cov = "^5.0.0"
pytest-random-order = "^1.1.1"
ruff = "^0.4.2"
isort = "^5.13.2"
pytest-isort = "^4.0.0"
mkdocs = "^1.5.3"
freezegun = "^1.5.0"
mkdocs-material = "^9.5.19"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.1"
mkdocs-section-index = "^0.3.9"
mkdocs-autorefs = "^1.0.1"
mkdocstrings = {extras = ["python"], version = "^0.24.3"}

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "7.2"
addopts = "-ra -q --random-order --doctest-glob='*.md' --doctest-modules --cov=acrmonitor --cov-fail-under=100 --ruff --isort --ignore=docs/"
#filterwarnings = ["ignore::DeprecationWarning:pytest_freezegun"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
